security:
    # Password hashers configuration
    password_hashers:
        Symfony\Component\Security\Core\User\InMemoryUser: plaintext

    # User provider configuration
    providers:
        in_memory:
            memory:
                users:
                    user1:
                        password: 'password123'
                        roles: ['ROLE_USER']
                    admin:
                        password: 'adminpassword'
                        roles: ['ROLE_ADMIN']

    # Firewalls configuration
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: /api/login
                username_path: username
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern: ^/api
            stateless: true
            provider: in_memory
            jwt: ~

        main:
            lazy: true
            provider: in_memory
            stateless: true
            jwt: ~

    # Access control configuration
    access_control:
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/posts$, roles: PUBLIC_ACCESS, methods: [GET] } # Allow everyone to get all posts
        - { path: ^/api/posts/\d+$, roles: PUBLIC_ACCESS, methods: [GET] } # Allow everyone to get a single post by ID
        - { path: ^/api/posts, roles: IS_AUTHENTICATED_FULLY, methods: [POST, PUT, DELETE] } # Restrict create, update, delete actions to authenticated users

    role_hierarchy:
        ROLE_ADMIN: [ROLE_USER]